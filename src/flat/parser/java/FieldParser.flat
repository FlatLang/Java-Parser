package flat/parser/java

import flat/parser
import flat/parser/matchers
import flat/ast
import flat/compiler/models/Token

import flat/extensions/SyntaxStringFunctions

data class extends ParserBase {
  override ParserBase[] childParsers => [
    AssignmentParser(),
  ]

  override lazy TokenPattern pattern => GroupTokenPattern<FieldNode>([
    SingleTokenPattern(type: Token.Type.IDENTIFIER),
    Patterns.genericParameters,
    GroupTokenPattern([
      SingleTokenPattern(type: Token.Type.SYMBOL, value: "["),
      SingleTokenPattern(type: Token.Type.SYMBOL, value: "]")
    ], repeat: true, optional: true),
    SingleTokenPattern(type: Token.Type.IDENTIFIER),
    GroupTokenPattern([
      SingleTokenPattern(type: Token.Type.SYMBOL, value: ","),
      SingleTokenPattern(type: Token.Type.IDENTIFIER),
    ], optional: true, repeat: true),
    SingleTokenPattern(type: Token.Type.SYMBOL, value: ",", optional: true),
  ])
}